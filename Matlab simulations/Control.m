function y = Control_reescalado4
%definicion de convergencia 

close all;
test = -1;
tf=50;
delta =  0.001;
M = 1000;
t = linspace(0,tf,M+1);% t es el vector de tiempo , la funcion linespace crea M+1 subintervalos
% igual espaciados entre 0 y 7
h = tf/M; %h es el espacio entre los subintervalos 
h2 = h/2;  
%definimos variables globales

global gammax; global gammay; global beta, global kappa;  
 global q;    global delta1;  global a; global F;
 global c;

%parametros del pepr 2018 Lotka Volterra
gammax=1; %de paper
gammay=0.96; %de paper
beta=2; %de paper la cepa X contribuye más nutrientes al mutualismo que la cepa Y
kappa=0.12; %parámetro que define la dinámica
delta1=0.5; %de paper
a=0.9; %las resistentes crecen más lento que las sensibles


%%%%% parametros de antibioticos
q=0.9;%TASA DE MUTACIÓN
c=16.66;  %epsilon por lambda sobre omega por K


%%%%%% parametro variable 
F=1.5;
%ecuaciones
%%%%%%valores de los parámetros de eficacia y costo
c1=0.001;
c2=0.001;
d1=0.0001;
d2=0.0001;
%a continuaci�n las variables de estado
x1=zeros(1,M+1);
x2=zeros(1,M+1);
x3=zeros(1,M+1);
x4=zeros(1,M+1);
%x3=zeros(1,M+1);
%a continuaci�n los controles
mu1 = zeros(1,M+1);
mu2=  zeros(1,M+1);
%a continuaci�n las variables adjuntas
lambda1 = zeros(1,M+1);
lambda2 = zeros(1,M+1);
lambda3 = zeros(1,M+1);
lambda4 = zeros(1,M+1);
%lambda3=  zeros(1,M+1);
%a continuaci�n las condiciones iniciales
x1(1) = 0.001;
x2(1) = 0.001;
x3(1) = 0.001;
x4(1) = 0.001;


k=0;
% a continuaci�n empieza el programa
while (test < 0)
    
    oldmu1 = mu1;
    oldmu2=mu2;
    oldx1 = x1;
    oldx2 = x2;
    oldx3 = x3;
    oldx4 = x4;

    oldlambda1 = lambda1;
    oldlambda2 = lambda2;
    oldlambda3 = lambda3;
    oldlambda4 = lambda4;

    
%A continuaci�n el  m�todo de Runge-Kuta para resolver las ecuaciones de estado tiempo hacia adelante.

for i = 1:M
%primera iteraci�n
m11=gammax*(x1(i)+x2(i))*(((x3(i)+x4(i))+F)/((x3(i)+x4(i))+F+kappa))*(1-(x1(i)+x2(i)+x3(i)+x4(i)))-...
    (1-mu1(i))*q*c*x1(i)-(1-q)*c*x1(i)-delta1*x1(i);
m12=a*gammax*(x1(i)+x2(i))*(((x3(i)+x4(i))+F)/((x3(i)+x4(i))+F+kappa))*(1-(x1(i)+x2(i)+x3(i)+x4(i)))+...
   (1-mu1(i))*c*q*x1(i)-delta1*x2(i);
m13=gammay*(x3(i)+x4(i))*((beta*(x1(i)+x2(i))+F)/(beta*(x1(i)+x2(i))+F+kappa))*(1-(x1(i)+x2(i)+x3(i)+x4(i)))-...
    (1-mu2(i))*c*q*x3(i)-c*(1-q)*x3(i)-delta1*x3(i);
m14=gammay*(x3(i)+x4(i))*((beta*(x1(i)+x2(i))+F)/(beta*(x1(i)+x2(i))+F+kappa))*(1-(x1(i)+x2(i)+x3(i)+x4(i)))+...
    (1-mu2(i))*c*q*x3(i)-delta1*x4(i);


%segunda iteracion

m21=gammax*((x1(i)+h2*m11)+(x2(i)+h2*m12))*((((x3(i)+h2*m13)+(x4(i)+h2*m14))+F)/(((x3(i)+h2*m13)+...
    (x4(i)+h2*m14))+F+kappa))*...
    (1-((x1(i)+h2*m11)+(x2(i)+h2*m12)+(x3(i)+h2*m13)+(x4(i)+h2*m14)))-(1-0.5*(mu1(i)+mu1(i+1)))*...
    c*q*(x1(i)+h2*m11)-...
    c*(1-q)*(x1(i)+h2*m11)-delta1*(x1(i)+h2*m11);
m22=a*gammax*((x1(i)+h2*m11)+(x2(i)+h2*m12))*((((x3(i)+h2*m13)+(x4(i)+h2*m14))+F)/(((x3(i)+h2*m13)+...
    (x4(i)+h2*m14))+...
    F+kappa))*(1-((x1(i)+h2*m11)+(x2(i)+h2*m12)+(x3(i)+h2*m13)+(x4(i)+h2*m14)))+...
    (1-0.5*(mu1(i)+mu1(i+1)))*c*q*...
    (x1(i)+h2*m11)-delta1*(x2(i)+h2*m12);
m23=gammay*((x3(i)+h2*m13)+(x4(i)+h2*m14))*((beta*((x1(i)+h2*m11)+(x2(i)+h2*m12))+F)/(beta*...
    ((x1(i)+h2*m11)+(x2(i)+h2*m12))+F+kappa))*(1-((x1(i)+h2*m11)+(x2(i)+h2*m12)+(x3(i)+h2*m13)+...
    (x4(i)+h2*m14)))-(1-0.5*(mu2(i)+mu2(i+1)))*c*q*(x3(i)+h2*m13)-c*(1-q)*(x3(i)+h2*m13)-...
    delta1*(x3(i)+h2*m13);
m24=gammay*((x3(i)+h2*m13)+(x4(i)+h2*m14))*((beta*((x1(i)+h2*m11)+(x2(i)+h2*m12))+F)/(beta*...
    ((x1(i)+h2*m11)+(x2(i)+h2*m12))+F+kappa))*(1-((x1(i)+h2*m11)+(x2(i)+h2*m12)+(x3(i)+h2*m13)+...
    (x4(i)+h2*m14)))+(1-0.5*(mu2(i)+mu2(i+1)))*c*q*(x3(i)+h2*m13)-...
    delta1*(x4(i)+h2*m14);


%tercera iteraci�n
m31=gammax*((x1(i)+h2*m21)+(x2(i)+h2*m22))*((((x3(i)+h2*m23)+(x4(i)+h2*m24))+F)/(((x3(i)+h2*m23)+...
    (x4(i)+h2*m24))+F+kappa))*...
    (1-((x1(i)+h2*m21)+(x2(i)+h2*m22)+(x3(i)+h2*m23)+(x4(i)+h2*m24)))-(1-0.5*(mu1(i)+mu1(i+1)))*...
    c*q*(x1(i)+h2*m21)-...
    c*(1-q)*(x1(i)+h2*m21)-delta1*(x1(i)+h2*m21);
m32=a*gammax*((x1(i)+h2*m21)+(x2(i)+h2*m22))*((((x3(i)+h2*m23)+(x4(i)+h2*m24))+F)/(((x3(i)+h2*m23)+...
    (x4(i)+h2*m24))+...
    F+kappa))*(1-((x1(i)+h2*m21)+(x2(i)+h2*m22)+(x3(i)+h2*m23)+(x4(i)+h2*m24)))+...
    (1-0.5*(mu1(i)+mu1(i+1)))*c*q*...
    (x1(i)+h2*m21)-delta1*(x2(i)+h2*m22);
m33=gammay*((x3(i)+h2*m23)+(x4(i)+h2*m24))*((beta*((x1(i)+h2*m21)+(x2(i)+h2*m22))+F)/(beta*...
    ((x1(i)+h2*m21)+(x2(i)+h2*m22))+F+kappa))*(1-((x1(i)+h2*m21)+(x2(i)+h2*m22)+(x3(i)+h2*m23)+...
    (x4(i)+h2*m24)))-(1-0.5*(mu2(i)+mu2(i+1)))*c*q*(x3(i)+h2*m23)-c*(1-q)*(x3(i)+h2*m23)-...
    delta1*(x3(i)+h2*m23);
m34=gammay*((x3(i)+h2*m23)+(x4(i)+h2*m24))*((beta*((x1(i)+h2*m21)+(x2(i)+h2*m22))+F)/(beta*...
    ((x1(i)+h2*m21)+(x2(i)+h2*m22))+F+kappa))*(1-((x1(i)+h2*m21)+(x2(i)+h2*m22)+(x3(i)+h2*m23)+...
    (x4(i)+h2*m24)))+(1-0.5*(mu2(i)+mu2(i+1)))*c*q*(x3(i)+h2*m23)-...
    delta1*(x4(i)+h2*m24);

%cuarta iteracion
m41=gammax*((x1(i)+h*m31)+(x2(i)+h*m32))*((((x3(i)+h*m33)+(x4(i)+h*m34))+F)/(((x3(i)+h*m33)+...
    (x4(i)+h*m34))+F+kappa))*...
    (1-((x1(i)+h*m31)+(x2(i)+h*m32)+(x3(i)+h*m33)+(x4(i)+h*m34)))-(1-mu1(i+1))*...
    c*q*(x1(i)+h*m31)-...
    c*(1-q)*(x1(i)+h*m31)-delta1*(x1(i)+h*m31);
m42=a*gammax*((x1(i)+h*m31)+(x2(i)+h*m32))*((((x3(i)+h*m33)+(x4(i)+h*m34))+F)/(((x3(i)+h*m33)+...
    (x4(i)+h*m34))+...
    F+kappa))*(1-((x1(i)+h*m31)+(x2(i)+h*m32)+(x3(i)+h*m33)+(x4(i)+h*m34)))+...
    (1-mu1(i+1))*c*q*...
    (x1(i)+h*m31)-delta1*(x2(i)+h*m32);
m43=gammay*((x3(i)+h*m33)+(x4(i)+h*m34))*((beta*((x1(i)+h*m31)+(x2(i)+h*m32))+F)/(beta*...
    ((x1(i)+h*m31)+(x2(i)+h*m32))+F+kappa))*(1-((x1(i)+h*m31)+(x2(i)+h*m32)+(x3(i)+h*m33)+...
    (x4(i)+h*m34)))-(1-mu2(i+1))*c*q*(x3(i)+h*m33)-c*(1-q)*(x3(i)+h*m33)-...
    delta1*(x3(i)+h*m33);
m44=gammay*((x3(i)+h*m33)+(x4(i)+h*m34))*((beta*((x1(i)+h*m31)+(x2(i)+h*m32))+F)/(beta*...
    ((x1(i)+h*m31)+(x2(i)+h*m32))+F+kappa))*(1-((x1(i)+h*m31)+(x2(i)+h*m32)+(x3(i)+h*m33)+...
    (x4(i)+h*m34)))+(1-mu2(i+1))*c*q*(x3(i)+h*m33)-...
    delta1*(x4(i)+h*m34);
       
%metodo de Runge Kuta
x1(i+1) = x1(i) + (h/6)*(m11 + 2*m21 + 2*m31 + m41);
x2(i+1) = x2(i) + (h/6)*(m12 + 2*m22 + 2*m32 + m42);
x3(i+1) = x3(i) + (h/6)*(m13 + 2*m23 + 2*m33 + m43);
x4(i+1) = x4(i) + (h/6)*(m14 + 2*m24 + 2*m34 + m44);
end

%a continuaci�n el m�todo de Runge Kuta con tiempo atr�s
for i = 1:M
    j = M + 2 - i;
      
%primera iteracion
n11=gammax*((x3(j)+x4(j)+F)/(x3(j)+x4(j)+F+kappa)*...
    (-1+2*x1(j)+2*x2(j)+x3(j)+x4(j)))*(lambda1(j)+a*lambda2(j))+...
    gammay*(F^2 + F*kappa - beta*kappa + beta*(beta*x2(j)^2 + kappa*x4(j) + 2*x2(j)*(...
     F + kappa + beta*x1(j) ) + x1(j)*(2*(F + kappa ) + beta*x1(j)  ) + kappa*x4(j) ) ...
     *(x3(j) + x4(j) )   )*(lambda3(j) + a*lambda4(j) ) +...
     c*q*mu1(j)*(lambda2(j) - lambda1(j) ) - c*( q*lambda2(j) - lambda1(j)  ) + delta1*lambda1(j);


n12=gammax*((x3(j)+x4(j)+F)/(x3(j)+x4(j)+F+kappa)*...
    (-1+2*x1(j)+2*x2(j)+x3(j)+x4(j)))*(lambda1(j)+a*lambda2(j))+...
    gammay*(F^2 + F*kappa - beta*kappa + beta*(beta*x2(j)^2 + kappa*x4(j) + 2*x2(j)*(...
     F + kappa + beta*x1(j) ) + x1(j)*(2*(F + kappa ) + beta*x1(j)  ) + kappa*x4(j) ) ...
     *(x3(j) + x4(j) )   )*(lambda3(j) + a*lambda4(j) ) ...
     -c1 + delta1*lambda2(j);


n13=gammay*(( (beta*(x1(j) +x2(j)) + F  )*(-1+ x1(j)+ x2(j) + 2*x3(j) + 2*x4(j) ) ) ...
    /( ( beta*(x1(j) + x2(j)  ) + F + kappa ) ) )* (lambda3(j) + a*lambda4(j)  )...
   +gammax*( (F^2 + (F - 1)*kappa + kappa*x2(j) + x4(j)^2 + kappa*x1(j) + 2*(F + kappa)*x3(j) + x3(j)^2 +...
    2*x4(j) * ( F + kappa + x3(j) )*(x3(j) + x4(j)) )/...
    (x3(j) + x4(j) + F + kappa  )^2 )* (lambda1(j) + a*lambda2(j) ) + ...
    c*q*mu2(j)*(lambda4(j) - lambda3(j) ) - c*(q*lambda4(j) - lambda3(j) ) + delta1*lambda3(j);


n14=gammay*(( (beta*(x1(j) +x2(j)) + F  )*(-1+ x1(j)+ x2(j) + 2*x3(j) + 2*x4(j) ) ) ...
    /( ( beta*(x1(j) + x2(j)  ) + F + kappa ) ) )* (lambda3(j) + a*lambda4(j)  )...
   +gammax*( (F^2 + (F - 1)*kappa + kappa*x2(j) + x4(j)^2 + kappa*x1(j) + 2*(F + kappa)*x3(j) + x3(j)^2 +...
    2*x4(j) * ( F + kappa + x3(j) )*(x3(j) + x4(j)) )/...
    (x3(j) + x4(j) + F + kappa  )^2 )* (lambda1(j) + a*lambda2(j) )  ...
    -c2 + delta1*lambda4(j);


%segunda iteraci�n

n21=gammax*((0.5*(x3(j)+x3(j-1))+ 0.5*(x4(j)+x4(j-1)) + F)/(0.5*(x3(j)+x3(j-1))+0.5*(x4(j)+x4(j-1))+F+kappa)*...
    (-1+2*0.5*(x1(j)+x1(j-1))+2*0.5*(x2(j)+x2(j-1))+0.5*(x3(j)+x3(j-1))+0.5*(x4(j)+x4(j-1))))*...
   ((lambda1(j)-h2*n11)+a*(lambda2(j)-h2*n12))+...
    gammay*(F^2 + F*kappa - beta*kappa + beta*(beta*0.5*(x2(j)+x2(j-1))^2 + kappa*0.5*(x4(j)+x4(j-1)) + ...
   2*0.5*(x2(j)+x2(j-1))*(  F + kappa + beta*0.5*(x1(j)+x1(j-1)) )...
   + 0.5*(x1(j)+x1(j-1))*(2*(F + kappa ) + beta*0.5*(x1(j)+x1(j-1)) ) + kappa*0.5*(x4(j)+x4(j-1)) ) ...
   *(0.5*(x3(j)+x3(j-1)) + 0.5*(x4(j)+x4(j-1)) )   )*((lambda3(j)-h2*n13)+a*(lambda4(j)-h2*n14)) +...
   c*q*mu1(j)*((lambda2(j)-h2*n12) - (lambda1(j)-h2*n11) ) - c*( q*(lambda2(j)-h2*n12) - (lambda1(j)-h2*n11)  )...
   + delta1*(lambda1(j)-h2*n11);
 
n22=gammax*((0.5*(x3(j)+x3(j-1))+0.5*(x4(j)+x4(j-1))+F)/(0.5*(x3(j)+x3(j-1))+0.5*(x4(j)+x4(j-1))+F+kappa)*...
    (-1+2*0.5*(x1(j)+x1(j-1))+2*0.5*(x2(j)+x2(j-1))+0.5*(x3(j)+x3(j-1))+0.5*(x4(j)+x4(j-1))))*...
    ((lambda1(j)-h2*n11)+a*(lambda2(j)-h2*n12))+...
    gammay*(F^2 + F*kappa - beta*kappa + beta*(beta*0.5*(x2(j)+x2(j-1))^2 + kappa*0.5*(x4(j)+x4(j-1)) + ...
    2*0.5*(x2(j)+x2(j-1))*( F + kappa + beta*0.5*(x1(j)+x1(j-1)) ) ...
 + 0.5*(x1(j)+x1(j-1))*(2*(F + kappa ) + beta*0.5*(x1(j)+x1(j-1))  ) + kappa*0.5*(x4(j)+x4(j-1)) ) ...
     *(0.5*(x3(j)+x3(j-1)) + 0.5*(x4(j)+x4(j-1)) )   )*((lambda3(j)-h2*n13) + a*(lambda4(j)-h2*n14) ) ...
     -c1 + delta1*(lambda2(j)-h2*n12);

n23=gammay*(( (beta*(0.5*(x1(j)+x1(j-1)) +0.5*(x2(j)+x2(j-1))) + F  )*(-10.5*(x1(j)+x1(j-1))+ 0.5*(x2(j)+x2(j-1))+...
    2*0.5*(x3(j)+x3(j-1)) + 2*0.5*(x4(j)+x4(j-1)) ) ) ...
    /( ( beta*(0.5*(x1(j)+x1(j-1)) + 0.5*(x2(j)+x2(j-1))  ) + F + kappa ) ) )* ...
   ((lambda3(j)-h2*n13) + a*(lambda4(j)-h2*n14)  )...
   +gammax*( (F^2 + (F - 1)*kappa + kappa*0.5*(x2(j)+x2(j-1)) + 0.5*(x4(j)+x4(j-1))^2 + kappa*0.5*(x1(j)+x1(j-1))... 
  + 2*(F + kappa)*0.5*(x3(j)+x3(j-1)) + 0.5*(x3(j)+x3(j-1))^2 +...
    2*0.5*(x4(j)+x4(j-1)) * ( F + kappa + 0.5*(x3(j)+x3(j-1)) )*(0.5*(x3(j)+x3(j-1)) + 0.5*(x4(j)+x4(j-1)) ) )/...
    (0.5*(x3(j)+x3(j-1)) + 0.5*(x4(j)+x4(j-1)) + F + kappa  )^2 )* ((lambda1(j)-h2*n11) + a*(lambda2(j)-h2*n12) ) + ...
    c*q*mu2(j)*((lambda4(j)-h2*n14) - (lambda3(j)-h2*n13) ) - c*(q*(lambda4(j)-h2*n14) - (lambda3(j)-h2*n13) ) +... 
   delta1*(lambda3(j)-h2*n13);

n24=gammay*(( (beta*(0.5*(x1(j)+x1(j-1)) + 0.5*(x2(j)+x2(j-1))) + F  )*(-1+0.5*(x1(j)+x1(j-1))+ 0.5*(x2(j)+x2(j-1)) +... 
    2*0.5*(x3(j)+x3(j-1)) + 2*0.5*(x4(j)+x4(j-1)) ) ) ...
    /( ( beta*(0.5*(x1(j)+x1(j-1)) + 0.5*(x2(j)+x2(j-1))  ) + F + kappa ) ) )* ((lambda3(j)-h2*n13)...
    + a*(lambda4(j)-h2*n14)  )...
   +gammax*( (F^2 + (F - 1)*kappa + kappa*0.5*(x2(j)+x2(j-1)) + 0.5*(x4(j)+x4(j-1))^2 + kappa*0.5*(x1(j)+x1(j-1))... 
   + 2*(F + kappa)*0.5*(x3(j)+x3(j-1)) + 0.5*(x3(j)+x3(j-1))^2 +...
    2*0.5*(x4(j)+x4(j-1)) * ( F + kappa + 0.5*(x3(j)+x3(j-1)) )*(0.5*(x3(j)+x3(j-1)) + 0.5*(x4(j)+x4(j-1))) )/...
    (0.5*(x3(j)+x3(j-1)) + 0.5*(x4(j)+x4(j-1)) + F + kappa  )^2 )* ((lambda1(j)-h2*n11) + a*(lambda2(j)-h2*n12) )  ...
    -c2 + delta1*(lambda4(j)-h2*n14);


%tercera iteracion
n31=gammax*((0.5*(x3(j)+x3(j-1))+0.5*(x4(j)+x4(j-1))+F)/(0.5*(x3(j)+x3(j-1))+0.5*(x4(j)+x4(j-1))+...
    F+kappa)*...
    (-1+2*0.5*(x1(j)+x1(j-1))+2*0.5*(x2(j)+x2(j-1))+0.5*(x3(j)+x3(j-1))+0.5*(x4(j)+x4(j-1))))*...
    ((lambda1(j)-h2*n21)+a*(lambda2(j)-h2*n22))+...
    gammay*(F^2 + F*kappa - beta*kappa + beta*(beta*0.5*(x2(j)+x2(j-1))^2 + ...
    kappa*0.5*(x4(j)+x4(j-1)) + 2*0.5*(x2(j)+x2(j-1))*(...
     F + kappa + beta*0.5*(x1(j)+x1(j-1)) ) + 0.5*(x1(j)+x1(j-1))*(2*(F + kappa ) +...
     beta*0.5*(x1(j)+x1(j-1))  ) + kappa*0.5*(x4(j)+x4(j-1)) ) ...
     *(0.5*(x3(j)+x3(j-1)) + 0.5*(x4(j)+x4(j-1)) )   )*...
     ((lambda3(j)-h2*n23) + a*(lambda4(j)-h2*n24) ) +...
     c*q*mu1(j)*((lambda2(j)-h2*n22) - (lambda1(j)-h2*n21) ) - ...
     c*( q*(lambda2(j)-h2*n22) - (lambda1(j)-h2*n21)  ) + delta1*(lambda1(j)-h2*n21);


n32=gammax*((0.5*(x3(j)+x3(j-1))+0.5*(x4(j)+x4(j-1))+F)/(0.5*(x3(j)+x3(j-1))+0.5*(x4(j)+x4(j-1))+...
    F+kappa)*...
    (-1+2*0.5*(x1(j)+x1(j-1))+2*0.5*(x2(j)+x2(j-1))+0.5*(x3(j)+x3(j-1))+0.5*(x4(j)+x4(j-1))))*...
    ((lambda1(j)-h2*n21)+a*(lambda2(j)-h2*n22))+...
    gammay*(F^2 + F*kappa - beta*kappa + beta*(beta*0.5*(x2(j)+x2(j-1))^2 + ...
    kappa*0.5*(x4(j)+x4(j-1)) + 2*0.5*(x2(j)+x2(j-1))*(...
     F + kappa + beta*0.5*(x1(j)+x1(j-1)) ) + 0.5*(x1(j)+x1(j-1))*(2*(F + kappa ) +...
     beta*0.5*(x1(j)+x1(j-1))  ) + kappa*0.5*(x4(j)+x4(j-1)) ) ...
     *(0.5*(x3(j)+x3(j-1)) + 0.5*(x4(j)+x4(j-1)) )   )*...
     ((lambda3(j)-h2*n23) + a*(lambda4(j)-h2*n24) ) -c1+ delta1*(lambda1(j)-h2*n21);


n33=gammay*(( (beta*(0.5*(x1(j)+x1(j-1)) +0.5*(x2(j)+x2(j-1))) + F  )*(1-0.5*(x1(j)+x1(j-1))+...
    0.5*(x2(j)+x2(j-1)) + 2*0.5*(x3(j)+x3(j-1)) + 2*0.5*(x4(j)+x4(j-1)) ) ) ...
    /( ( beta*(0.5*(x1(j)+x1(j-1)) + 0.5*(x2(j)+x2(j-1))  ) + F + kappa ) ) )*...
    ((lambda3(j)-h2*n23) + a*(lambda4(j)-h2*n24)  )...
   +gammax*( (F^2 + (F - 1)*kappa + kappa*0.5*(x2(j)+x2(j-1)) + 0.5*(x4(j)+x4(j-1))^2 +...
   kappa*0.5*(x1(j)+x1(j-1)) + 2*(F + kappa)*0.5*((x3(j) + x3(j-1)) + 0.5*(x3(j) + x3(j-1))^2 ...
    +2*0.5*(x4(j)+x4(j-1)) * ( F + kappa + 0.5*(x3(j)+x3(j-1)) )*(0.5*(x3(j)+x3(j-1)) +...
    0.5*(x4(j)+x4(j-1))) )/...
    (0.5*(x3(j)+x3(j-1)) + 0.5*(x4(j)+x4(j-1))) + F + kappa  )^2 )* ((lambda1(j)-h2*n21) +...
    a*(lambda2(j)-h2*n22) ) + ...
    c*q*mu2(j)*((lambda4(j)-h2*n24) - (lambda3(j)-h2*n23) ) - ...
    c*(q*(lambda4(j)-h2*n24) - (lambda3(j)-h2*n23) ) + delta1*(lambda3(j)-h2*n23);


n34=gammay*(( (beta*(0.5*(x1(j)+x1(j-1)) +0.5*(x2(j)+x2(j-1))) + F )*(1-0.5*(x1(j)+x1(j-1))+...
0.5*(x2(j)+x2(j-1)) + 2*0.5*(x3(j)+x3(j-1)) + 2*0.5*(x4(j)+x4(j-1)) ) ) ...
/( ( beta*(0.5*(x1(j)+x1(j-1)) + 0.5*(x2(j)+x2(j-1)) ) + F + kappa ) ) )*...
((lambda3(j)-h2*n23) + a*(lambda4(j)-h2*n24) )...
+gammax*( (F^2 + (F - 1)*kappa + kappa*0.5*(x2(j)+x2(j-1)) + 0.5*(x4(j)+x4(j-1))^2 +...
kappa*0.5*(x1(j)+x1(j-1)) + 2*(F + kappa)*0.5*((x3(j)+x3(j-1)) + (x3(j)+x3(j-1))^2 +...
2*0.5*(x4(j)+x4(j-1)) * ( F + kappa + 0.5*(x3(j)+x3(j-1)) )*(0.5*(x3(j)+x3(j-1)) +...
0.5*(x4(j)+x4(j-1))) )/...
(0.5*(x3(j)+x3(j-1)) + 0.5*(x4(j)+x4(j-1))) + F + kappa )^2 )* ((lambda1(j)-h2*n21) +...
a*(lambda2(j)-h2*n22) ) -c2+delta1*(lambda4(j)-h2*n24); 


%cuarta iteracion


n41=gammax*((x3(j-1)+x4(j-1)+F)/(x3(j-1)+x4(j-1)+F+kappa)*...
    (-1+2*x1(j-1)+2*x2(j-1)+x3(j-1)+x4(j-1)))*((lambda1(j-1)-h*n31)+a*(lambda2(j-1)-h*n32))+...
    gammay*(F^2 + F*kappa - beta*kappa + beta*(beta*x2(j-1)^2 + kappa*x4(j-1) + 2*x2(j-1)*(...
     F + kappa + beta*x1(j-1) ) + x1(j-1)*(2*(F + kappa ) + beta*x1(j-1)  ) + kappa*x4(j-1) ) ...
     *(x3(j-1) + x4(j-1) )   )*((lambda3(j-1)-h*n33) + a*(lambda4(j-1)-h*n34) ) +...
     c*q*mu1(j)*((lambda2(j-1)-h*n32) - (lambda1(j-1)-h*n31) ) - c*( q*(lambda2(j-1)-h*n32) -...
     (lambda1(j-1)-h*n31)  ) + delta1*(lambda1(j)-h*n31);


n42=gammax*((x3(j-1)+x4(j-1)+F)/(x3(j-1)+x4(j-1)+F+kappa)*...
    (-1+2*x1(j-1)+2*x2(j-1)+x3(j-1)+x4(j-1)))*((lambda1(j-1)-h*n31)+a*(lambda2(j-1)-h*n32))+...
    gammay*(F^2 + F*kappa - beta*kappa + beta*(beta*x2(j-1)^2 + kappa*x4(j-1) + 2*x2(j-1)*(...
     F + kappa + beta*x1(j-1) ) + x1(j-1)*(2*(F + kappa ) + beta*x1(j-1)  ) + kappa*x4(j-1) ) ...
     *(x3(j-1) + x4(j-1) )   )*((lambda3(j)-h*n33) + a*(lambda4(j)-h*n34) ) ...
     -c1 + delta1*(lambda2(j)-h*n32);


n43=gammay*(( (beta*(x1(j-1) +x2(j-1)) + F  )*(-1+x1(j-1)+ x2(j-1) + 2*x3(j-1) + 2*x4(j-1) ) ) ...
    /( ( beta*(x1(j) + x2(j-1)  ) + F + kappa ) ) )* ((lambda3(j)-h*n33) + a*(lambda4(j)-h*n34)  )...
   +gammax*( (F^2 + (F - 1)*kappa + kappa*x2(j-1) + x4(j-1)^2 + kappa*x1(j-1) + ...
    2*(F + kappa)*x3(j-1) + x3(j-1)^2 +...
    2*x4(j-1) * ( F + kappa + x3(j-1) )*(x3(j-1) + x4(j-1)) )/...
    (x3(j-1) + x4(j-1) + F + kappa  )^2 )* ((lambda1(j)-h*n31) + a*(lambda2(j)-h*n32) ) + ...
    c*q*mu2(j)*((lambda4(j)-h*n34) - (lambda3(j)-h*n33) ) - c*(q*(lambda4(j)-h*n34) -...
    (lambda3(j)-h*n33) ) + delta1*(lambda3(j)-h*n33);


n44=gammay*(( (beta*(x1(j-1) +x2(j-1)) + F  )*(-1+x1(j-1)+ x2(j-1) + 2*x3(j-1) + 2*x4(j-1) ) ) ...
    /( ( beta*(x1(j-1) + x2(j-1)  ) + F + kappa ) ) )* ((lambda3(j)-h*n33) + a*(lambda4(j)-h*n34)  )...
   +gammax*( (F^2 + (F - 1)*kappa + kappa*x2(j-1) + x4(j-1)^2 + kappa*x1(j-1) + ...
   2*(F + kappa)*x3(j-1) + x3(j-1)^2 +...
    2*x4(j-1) * ( F + kappa + x3(j-1) )*(x3(j-1) + x4(j-1)) )/...
    (x3(j-1) + x4(j-1) + F + kappa  )^2 )* ((lambda1(j)-h*n31) + a*(lambda2(j)-h*n32) )  ...
    -c2 + delta1*(lambda4(j)-h*n34);


%metodo de Runge Kuta
lambda1(j-1) = lambda1(j) - (h/6)*(n11 + 2*n21 + 2*n31 + n41);
lambda2(j-1) = lambda2(j) - (h/6)*(n12 + 2*n22 + 2*n32 + n42);
lambda3(j-1) = lambda3(j) - (h/6)*(n13 + 2*n23 + 2*n33 + n43);
lambda4(j-1) = lambda4(j) - (h/6)*(n14 + 2*n24 + 2*n34 + n44);
end
%fin del programa
    
    %caracterizacion del control
    auxmu1=(c*q*x1.*(lambda2-lambda1).*1)/d1;
    auxmu2=(q*c*x3.*(lambda4-lambda3).*1)/d2;
    auxcontrolmu1=min(1,max(0,auxmu1));
    auxcontrolmu2=min(1,max(0,auxmu2));
    mu1= 0.5*(auxcontrolmu1 + oldmu1);
    mu2= 0.5*(auxcontrolmu2 + oldmu2);
   
    
  %convergencia
    temp11 = delta*sum(abs(mu1)) - sum(abs(oldmu1 - mu1));
    temp22 = delta*sum(abs(mu2)) - sum(abs(oldmu2 - mu2));
    temp1  = delta*sum(abs(x1)) - sum(abs(oldx1 - x1));
    temp2 = delta*sum(abs(x2)) - sum(abs(oldx2 - x2));
    temp3 = delta*sum(abs(x3)) - sum(abs(oldx3 - x3));
    temp4 = delta*sum(abs(x4)) - sum(abs(oldx4 - x4));
    temp5 = delta*sum(abs(lambda1)) - sum(abs(oldlambda1 - lambda1));
    temp6 = delta*sum(abs(lambda2)) - sum(abs(oldlambda2 - lambda2));
    temp7 = delta*sum(abs(lambda3)) - sum(abs(oldlambda3 - lambda3));
    temp8 = delta*sum(abs(lambda4)) - sum(abs(oldlambda4 - lambda4));
    
    %funci�n de costo
    J=sum(c1*x2+c2*x4+d1*0.5*mu1.^2+d2*0.5*mu2.^2)*(t(i+1)-t(i));
    
  %test 
   test = min(temp11, min(temp22, min(temp1, min(temp2, min(temp3, min(temp4, min(temp5, min(temp6, min(temp7, min(temp8))))))))));
   k=k+1;

%   disp(auxmu1);
%   disp(auxcontrolmu1);
%   disp(mu1);

  
  
end
 %aqui termina el m�todo del barrido.  Si el minimo es no negativo, la
%convergencia ha sido alcanzada, de lo contrario se hace otro barrido. una
%vez la convergencia ocurra, los valores de los vectores finales se
%almacenan en las siguientes variables: 



disp(k);


y(1,:) = x1;
y(2,:) = x2;
y(3,:) = x3;
y(4,:) = x4;
y(5,:) = lambda1;
y(6,:)= lambda2;
y(7,:)=lambda3;
y(8,:) = lambda4;
y(9,:) = mu1;
y(10,:) = mu2;
y(11,:) = J;
y(12,:) = t;


Z=[y(12,:); y(1, :); y(2, :); y(3, :); y(4, :); y(5,:); y(6,:);y(7,:);y(8,:); y(9,:);y(10,:);y(11,:)];
fid = fopen('control-4.txt','w');
fprintf(fid,'%f %f %f %f %f %f %f %f %f %f %f %f\r\n',Z);
fclose(fid);


[T,Y] = ode45('Nocontrol_paracontrol', [0 50], [0.01 0.01 0.01 0.01]);


figure(1)
          
           subplot(2,1,1);plot(T, Y(:,1),'k-',y(12,:),y(1,:),'m--','LineWidth',2.2)
           subplot(2,1,1);
           subplot(2,1,1);ylabel('Sensitive bacteria X')
           grid on
           
           subplot(2,1,2); plot(T, Y(:,2),'k-',y(12,:),y(2,:),'m--','LineWidth',2.2)
           subplot(2,1,2);xlabel('Time')
           subplot(2,1,2);ylabel('Resistant bacteria X')
           grid on
       
           
figure(2)

          subplot(2,1,1)
          plot(T, Y(:,3),'k-',y(12,:),y(3,:),'m--','LineWidth',2.2)
          ylabel('Sensitive bacteria Y')
           grid on
    
           subplot(2,1,2) 
           plot(T, Y(:,4),'k-',y(12,:),y(4,:),'m--','LineWidth',2.2)
           xlabel('Time')
           ylabel('Resistant bacteria Y')
           grid on
           
figure(3)

          plot(y(12,:),y(9,:),'b-', y(12,:),y(10,:),'g-', 'LineWidth',2.2)
          ylabel('Controls \mu_1 and \mu_2')
           grid on
    
           
           

     
           
